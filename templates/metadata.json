{
  "version": "1.0.0",
  "generated": "2025-08-27T13:41:21.343Z",
  "templates": {
    "modes": [
      {
        "name": "ai-debt-maintainer",
        "description": "This codebase has knowledge and tech debt left over from previous changes made by humans and AIs. Your job is to review the codebase for \"code smells\" and other heuristics and identify opportunities to clean up.",
        "tags": [
          ""
        ],
        "dependencies": [
          ""
        ]
      },
      {
        "name": "architect",
        "description": "You are now operating in Architect mode. Your focus is on system design and technical excellence.",
        "tags": [
          ""
        ],
        "dependencies": [
          ""
        ]
      },
      {
        "name": "autonomous-project-manager",
        "description": "You are operating in Autonomous Project Manager mode. You are to be agentic and drive the task to completion without human intervention.",
        "tags": [
          ""
        ],
        "dependencies": [
          ""
        ]
      },
      {
        "name": "component-engineer",
        "description": "You are now operating in Component Engineer mode. Your focus is on crafting high-quality React components with TypeScript and modern patterns.",
        "tags": [
          "react",
          "components",
          "typescript",
          "frontend",
          "engineering"
        ],
        "dependencies": [
          ""
        ]
      },
      {
        "name": "engineer",
        "description": "You are now operating in Engineer mode. Your focus is on crafting high-quality code and solving technical challenges.",
        "tags": [
          ""
        ],
        "dependencies": [
          ""
        ]
      },
      {
        "name": "react-architect",
        "description": "You are now operating in React Architect mode. Your focus is on React application architecture, component design, and state management patterns.",
        "tags": [
          "react",
          "frontend",
          "architecture",
          "design",
          "typescript"
        ],
        "dependencies": [
          ""
        ]
      },
      {
        "name": "reviewer",
        "description": "You are now operating in Reviewer mode. Your focus is on quality assurance and constructive feedback.",
        "tags": [
          ""
        ],
        "dependencies": [
          ""
        ]
      },
      {
        "name": "ui-reviewer",
        "description": "You are now operating in UI Reviewer mode. Your focus is on React component quality, user experience, and frontend code review.",
        "tags": [
          "react",
          "ui",
          "ux",
          "review",
          "frontend",
          "accessibility"
        ],
        "dependencies": [
          ""
        ]
      }
    ],
    "workflows": [
      {
        "name": "component-creation",
        "description": "A systematic approach to creating React components with TypeScript, following best practices for reusability, accessibility, and testing.",
        "tags": [
          "react",
          "components",
          "typescript",
          "frontend",
          "development"
        ],
        "dependencies": [
          ""
        ]
      },
      {
        "name": "openmemory-setup",
        "description": "This workflow guides an LLM agent in setting up OpenMemory MCP for the user's local environment to enable persistent memory across sessions.",
        "tags": [
          ""
        ],
        "dependencies": [
          ""
        ]
      },
      {
        "name": "review",
        "description": "A structured approach to code review that ensures quality, security, and maintainability through systematic evaluation.",
        "tags": [
          ""
        ],
        "dependencies": [
          ""
        ]
      },
      {
        "name": "state-management",
        "description": "A systematic approach to implementing state management in React applications, covering local state, context, and external state solutions.",
        "tags": [
          "react",
          "state-management",
          "context",
          "redux",
          "zustand",
          "hooks"
        ],
        "dependencies": [
          ""
        ]
      },
      {
        "name": "style-system",
        "description": "A comprehensive approach to implementing consistent styling systems in React applications using CSS modules, styled components, or Tailwind CSS.",
        "tags": [
          "css",
          "styling",
          "design-system",
          "react",
          "frontend",
          "tailwind",
          "styled-components"
        ],
        "dependencies": [
          ""
        ]
      },
      {
        "name": "summarize",
        "description": "A systematic approach to compressing context and extracting essential information from codebases, directories, or complex topics.",
        "tags": [
          ""
        ],
        "dependencies": [
          ""
        ]
      }
    ],
    "agents": [
      {
        "name": "claude-code-research",
        "description": "Expert on Claude Code features and capabilities. Use when you need information about the latest Claude Code features, best practices, or documentation.",
        "tags": [
          ""
        ],
        "dependencies": [
          ""
        ],
        "tools": "WebFetch, WebSearch, Read"
      },
      {
        "name": "file-content-analyzer",
        "description": "Use this agent when you need to analyze large files to understand their structure, content type, and organization. Examples: <example>Context: User has a large log file and wants to understand its structure before processing it. user: \\\"I have this 50MB log file and I'm not sure what's in it. Can you help me understand its structure?\\\" assistant: \\\"I'll use the file-content-analyzer agent to sample and analyze your log file to create a comprehensive overview of its contents and structure.\\\"</example> <example>Context: User is working with a large codebase file and needs a quick overview. user: \\\"This Python file is 2000 lines long. Can you give me a breakdown of what's in it?\\\" assistant: \\\"Let me use the file-content-analyzer agent to sample this large Python file and create a table of contents showing its structure, classes, functions, and key sections.\\\"</example>",
        "tags": [
          ""
        ],
        "dependencies": [
          ""
        ],
        "tools": "Glob, Grep, LS, Read, WebFetch, TodoWrite, WebSearch, BashOutput, KillBash"
      },
      {
        "name": "session-summarizer",
        "description": "Use PROACTIVELY when user mentions recording work, saving progress, creating session summaries, or documenting what was done. Automatically creates or updates tickets with AI-generated summaries of development work.",
        "tags": [
          ""
        ],
        "dependencies": [
          ""
        ],
        "tools": "Read, Glob, Grep, Bash"
      },
      {
        "name": "ticket-finder",
        "description": "Find relevant tickets based on current work, files being modified, or keywords",
        "tags": [
          ""
        ],
        "dependencies": [
          ""
        ],
        "tools": "Read, Glob, Grep"
      }
    ],
    "hooks": [
      {
        "name": "acronym-expander",
        "description": "Automatically expands configured acronyms in prompts",
        "tags": [],
        "dependencies": [],
        "event": "UserPromptSubmit",
        "priority": 150
      },
      {
        "name": "git-context-loader",
        "description": "Loads current git status on each user prompt",
        "tags": [],
        "dependencies": [],
        "event": "UserPromptSubmit",
        "priority": 95
      },
      {
        "name": "project-overview",
        "description": "Loads project overview including tickets status at session start",
        "tags": [],
        "dependencies": [],
        "event": "SessionStart",
        "priority": 85
      }
    ]
  }
}
